// flow-typed signature: c186e6e93cd9be7566b25434bfeb01bb
// flow-typed version: <<STUB>>/jsmediatags_v3.4.0/flow_v0.45.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'jsmediatags'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'jsmediatags' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'jsmediatags/build2/ArrayFileReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/BlobFileReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/ByteArrayUtils' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/ChunkedFileData' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/ID3v1TagReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/ID3v2FrameReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/ID3v2TagContents' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/ID3v2TagReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/jsmediatags' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/MediaFileReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/MediaTagReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/MP4TagContents' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/MP4TagReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/NodeFileReader' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/StringUtils' {
  declare module.exports: any;
}

declare module 'jsmediatags/build2/XhrFileReader' {
  declare module.exports: any;
}

// Filename aliases
declare module 'jsmediatags/build2/ArrayFileReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ArrayFileReader'>;
}
declare module 'jsmediatags/build2/BlobFileReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/BlobFileReader'>;
}
declare module 'jsmediatags/build2/ByteArrayUtils.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ByteArrayUtils'>;
}
declare module 'jsmediatags/build2/ChunkedFileData.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ChunkedFileData'>;
}
declare module 'jsmediatags/build2/ID3v1TagReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ID3v1TagReader'>;
}
declare module 'jsmediatags/build2/ID3v2FrameReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ID3v2FrameReader'>;
}
declare module 'jsmediatags/build2/ID3v2TagContents.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ID3v2TagContents'>;
}
declare module 'jsmediatags/build2/ID3v2TagReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/ID3v2TagReader'>;
}
declare module 'jsmediatags/build2/jsmediatags.js' {
  declare module.exports: $Exports<'jsmediatags/build2/jsmediatags'>;
}
declare module 'jsmediatags/build2/MediaFileReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/MediaFileReader'>;
}
declare module 'jsmediatags/build2/MediaTagReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/MediaTagReader'>;
}
declare module 'jsmediatags/build2/MP4TagContents.js' {
  declare module.exports: $Exports<'jsmediatags/build2/MP4TagContents'>;
}
declare module 'jsmediatags/build2/MP4TagReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/MP4TagReader'>;
}
declare module 'jsmediatags/build2/NodeFileReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/NodeFileReader'>;
}
declare module 'jsmediatags/build2/StringUtils.js' {
  declare module.exports: $Exports<'jsmediatags/build2/StringUtils'>;
}
declare module 'jsmediatags/build2/XhrFileReader.js' {
  declare module.exports: $Exports<'jsmediatags/build2/XhrFileReader'>;
}
